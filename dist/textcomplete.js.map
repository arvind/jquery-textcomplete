{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "lib/textarea_caret.js",
    "src/Completer.js",
    "src/Dropdown.js",
    "src/Strategy.js",
    "src/adapters/Adapter.js",
    "src/adapters/ContentEditable.js",
    "src/adapters/IETextarea.js",
    "src/adapters/Textarea.js",
    "src/adapters/index.js",
    "src/commands.js",
    "src/index.js",
    "src/util.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACv
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "// The MIT License (MIT)\n//\n// Copyright (c) 2015 Jonathan Ong me@jongleberry.com\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n// associated documentation files (the \"Software\"), to deal in the Software without restriction,\n// including without limitation the rights to use, copy, modify, merge, publish, distribute,\n// sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or\n// substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n// NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n// https://github.com/component/textarea-caret-position\n\n// The properties that we copy into a mirrored div.\n// Note that some browsers, such as Firefox,\n// do not concatenate properties, i.e. padding-top, bottom etc. -> padding,\n// so we have to do every single property specifically.\n/* jshint node: true */\n\nvar properties = [\n  'direction',  // RTL support\n  'boxSizing',\n  'width',  // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\n  'height',\n  'overflowX',\n  'overflowY',  // copy the scrollbar for IE\n\n  'borderTopWidth',\n  'borderRightWidth',\n  'borderBottomWidth',\n  'borderLeftWidth',\n  'borderStyle',\n\n  'paddingTop',\n  'paddingRight',\n  'paddingBottom',\n  'paddingLeft',\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n  'fontStyle',\n  'fontVariant',\n  'fontWeight',\n  'fontStretch',\n  'fontSize',\n  'fontSizeAdjust',\n  'lineHeight',\n  'fontFamily',\n\n  'textAlign',\n  'textTransform',\n  'textIndent',\n  'textDecoration',  // might not make a difference, but better be safe\n\n  'letterSpacing',\n  'wordSpacing',\n\n  'tabSize',\n  'MozTabSize'\n\n];\n\nvar isBrowser = (typeof window !== 'undefined');\nvar isFirefox = (isBrowser && window.mozInnerScreenX != null);\n\nfunction getCaretCoordinates(element, position, options) {\n  if(!isBrowser) {\n    throw new Error('textarea-caret-position#getCaretCoordinates should only be called in a browser');\n  }\n\n  var debug = options && options.debug || false;\n  if (debug) {\n    var el = document.querySelector('#input-textarea-caret-position-mirror-div');\n    if ( el ) { el.parentNode.removeChild(el); }\n  }\n\n  // mirrored div\n  var div = document.createElement('div');\n  div.id = 'input-textarea-caret-position-mirror-div';\n  document.body.appendChild(div);\n\n  var style = div.style;\n  var computed = window.getComputedStyle? getComputedStyle(element) : element.currentStyle;  // currentStyle for IE < 9\n\n  // default textarea styles\n  style.whiteSpace = 'pre-wrap';\n  if (element.nodeName !== 'INPUT')\n    style.wordWrap = 'break-word';  // only for textarea-s\n\n  // position off-screen\n  style.position = 'absolute';  // required to return coordinates properly\n  if (!debug)\n    style.visibility = 'hidden';  // not 'display: none' because we want rendering\n\n  // transfer the element's properties to the div\n  properties.forEach(function(prop) {\n    style[prop] = computed[prop];\n  });\n\n  if (isFirefox) {\n    // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\n    if (element.scrollHeight > parseInt(computed.height))\n      style.overflowY = 'scroll';\n  } else {\n    style.overflow = 'hidden';  // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\n  }\n\n  div.textContent = element.value.substring(0, position);\n  // the second special handling for input type=\"text\" vs textarea: spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\n  if (element.nodeName === 'INPUT')\n    div.textContent = div.textContent.replace(/\\s/g, '\\u00a0');\n\n  var span = document.createElement('span');\n  // Wrapping must be replicated *exactly*, including when a long word gets\n  // onto the next line, with whitespace at the end of the line before (#7).\n  // The  *only* reliable way to do that is to copy the *entire* rest of the\n  // textarea's content into the <span> created at the caret position.\n  // for inputs, just '.' would be enough, but why bother?\n  span.textContent = element.value.substring(position) || '.';  // || because a completely empty faux span doesn't render at all\n  div.appendChild(span);\n\n  var coordinates = {\n    top: span.offsetTop + parseInt(computed['borderTopWidth']),\n    left: span.offsetLeft + parseInt(computed['borderLeftWidth'])\n  };\n\n  if (debug) {\n    span.style.backgroundColor = '#aaa';\n  } else {\n    document.body.removeChild(div);\n  }\n\n  return coordinates;\n}\n\nmodule.exports = getCaretCoordinates;\n",
    "/* jshint node: true */\n\n'use strict';\n\nvar Dropdown = require('./Dropdown'),\n    adapters = require('./adapters'),\n    util = require('./util'),\n    id = 0;\n\nfunction Completer(element, options) {\n  this.el = element;\n  this.id = 'textcomplete' + (++id);\n  this.views   = [];\n  this.options = Object.assign({}, Completer._getDefaults(), options);\n  this.strategies = [];\n\n  var self = this,\n      tagName  = this.el.tagName.toLowerCase(),\n      tagType  = this.el.getAttribute('type'),\n      editable = this.el.isContentEditable;\n\n  // pack tighter\n  if (tagName !== 'input' && tagType !== 'text' && tagType !== 'search' && tagName !== 'textarea' && !editable) {\n    throw new Error('TextComplete must be called on a textarea or a contenteditable element.');\n  }\n\n  if (element === document.activeElement) {\n    // element has already been focused. Initialize view objects immediately.\n    this.initialize();\n  } else {\n    // Initialize view objects lazily.\n    util.one(this.el, 'focus', function() { self.initialize(); });\n  }\n}\n\nCompleter._getDefaults = function() {\n  if (!Completer.DEFAULTS) {\n    Completer.DEFAULTS = {\n      appendTo: document.body,\n      zIndex: '100'\n    };\n  }\n\n  return Completer.DEFAULTS;\n};\n\nObject.assign(Completer.prototype, {\n  // Public properties\n  // -----------------\n\n  id:         null,\n  option:     null,\n  strategies: null,\n  adapter:    null,\n  dropdown:   null,\n\n  // Public methods\n  // --------------\n\n  initialize: function() {\n    var el = this.el,\n        tagName = el.tagName.toLowerCase(),\n        Adapter, viewName;\n\n    // Initialize view objects.\n    this.dropdown = new Dropdown(el, this, this.options);\n\n    if (this.options.adapter) {\n      Adapter = this.options.adapter;\n    } else {\n      if (tagName === 'textarea' || tagName === 'input') {\n        viewName = util.isNumber(el.selectionEnd) ? 'Textarea' : 'IETextarea';\n      } else {\n        viewName = 'ContentEditable';\n      }\n      Adapter = adapters[viewName];\n    }\n\n    this.adapter = new Adapter(el, this, this.options);\n  },\n\n  // TODO\n  destroy: function() {\n    if (this.adapter)  {\n      this.adapter.destroy();\n    }\n    if (this.dropdown) {\n      this.dropdown.destroy();\n    }\n\n    this.el = this.adapter = this.dropdown = null;\n  },\n\n  deactivate: function() {\n    if (this.dropdown) {\n      this.dropdown.deactivate();\n    }\n  },\n\n  // Invoke textcomplete.\n  trigger: function(text, skipUnchangedTerm) {\n    if (!this.dropdown) this.initialize();\n    text = text || this.adapter.getTextFromHeadToCaret();\n    var searchQuery = this._extractSearchQuery(text);\n    if (searchQuery.length) {\n      var term = searchQuery[1];\n      // Ignore shift-key, ctrl-key and so on.\n      if (skipUnchangedTerm && this._term === term && term !== \"\") { return; }\n      this._term = term;\n      this._search.apply(this, searchQuery);\n    } else {\n      this._term = null;\n      this.dropdown.deactivate();\n    }\n  },\n\n  fire: function(eventName) {\n    // perhaps a better way to check event type than regex\n    if (eventName.indexOf('textComplete') >= 0) {\n      util.triggerCustom(this.el, eventName);\n    } else {\n      util.triggerNative(this.el, eventName);\n    }\n\n    return this;\n  },\n\n  register: function(strategies) {\n    Array.prototype.push.apply(this.strategies, strategies);\n  },\n\n  // Insert the value into adapter view. It is called when the dropdown is clicked\n  // or selected.\n  //\n  // value    - The selected element of the array callbacked from search func.\n  // strategy - The Strategy object.\n  // e        - Click or keydown event object.\n  select: function(value, strategy, e) {\n    console.log('select called');\n\n    this._term = null;\n    this.adapter.select(value, strategy, e);\n\n    this.fire('change').fire('textComplete:select');\n    this.adapter.focus();\n  },\n\n  // Private properties\n  // ------------------\n\n  _clearAtNext: true,\n  _term:        null,\n\n  // Private methods\n  // ---------------\n\n  // Parse the given text and extract the first matching strategy.\n  //\n  // Returns an array including the strategy, the query term and the match\n  // object if the text matches a strategy; otherwise returns an empty array.\n  _extractSearchQuery: function(text) {\n    var strategy, context, matchRegexp, match;\n\n    for (var i = 0; i < this.strategies.length; i++) {\n      strategy = this.strategies[i];\n      context = strategy.context(text);\n\n      if (context || context === '') {\n        matchRegexp = util.isFunction(strategy.match) ?\n          strategy.match(text) : strategy.match;\n\n        if (util.isString(context)) {\n          text = context;\n        }\n\n        match = text.match(matchRegexp);\n        if (match) {\n          return [strategy, match[strategy.index], match];\n        }\n      }\n    }\n\n    return [];\n  },\n\n  /* POTENTIAL SUSPECT */\n  // Call the search method of selected strategy..\n  _search: util.lock(function(free, strategy, term, match) {\n    var self = this;\n\n    strategy.search(term, function(data, stillSearching) {\n\n      if (!self.dropdown.shown) {\n        self.dropdown.activate();\n      }\n\n      if (self._clearAtNext) {\n        // The first callback in the current lock.\n        self.dropdown.clear();\n        self._clearAtNext = false;\n      }\n\n      self.dropdown.setPosition(self.adapter.getCaretPosition());\n\n      self.dropdown.render(self._zip(data, strategy, term));\n\n      if (!stillSearching) {      // The last callback in the current lock.\n        free();\n        self._clearAtNext = true; // Call dropdown.clear at the next time.\n      }\n\n    }, match);\n\n  }),\n\n  /**\n   * Build a parameter for Dropdown#render. For example,\n   *\n   * this._zip(['a', 'b'], 's');\n   * //=> [{ value: 'a', strategy: 's' }, { value: 'b', strategy: 's' }]\n   *\n   * @param  {Object[]} data     [description]\n   * @param  {Strategy} strategy [description]\n   * @param  {string} term     [description]\n   * @return {Object[]}          [description]\n   */\n  _zip: function(data, strategy, term) {\n    return data.map(function(value) {\n      return { value: value, strategy: strategy, term: term };\n    }).filter(function(i) {\n      return i.value !== null;\n    });\n  }\n});\n\nmodule.exports = Completer;\n",
    "/* jshint node: true */\n\n'use strict';\n\nvar util = require('./util');\n\nvar dropdownViews = {};\n\ndocument.addEventListener('click', function(e) {\n  var id = e.originalEvent && e.originalEvent.keepTextCompleteDropdown;\n\n  Object.keys(dropdownViews).forEach(function(key) {\n    var view = dropdownViews[key];\n    if (key !== id) view.deactivate();\n  })\n});\n\nvar COMMANDS = require('./commands');\n\nvar OPTIONS = ['maxCount', 'placement', 'footer', 'header',\n  'noResultsMessage', 'className'];\n\n// Dropdown view\n// =============\n\n// Construct Dropdown object.\n//\n// element - Textarea or contenteditable element.\nfunction Dropdown(element, completer, options) {\n  this.el        = Dropdown.createElement(options);\n  this.completer = completer;\n  this.id        = completer.id + 'dropdown';\n  this._data     = []; // zipped data.\n  this.inputEl   = element;\n  this.options   = options;\n\n  // Override setPosition method.\n  if (options.listPosition) {\n    this.setPosition = options.listPosition;\n  }\n\n  if (options.height) {\n    this.el.style.height = options.height;\n  }\n\n  // opt.name potentially empty\n  OPTIONS.forEach(function(opt) {\n    if (options[opt.name] != null) {\n      this[opt.name] = options[opt.name];\n    }\n  }, this);\n\n  this._bindEvents(element);\n  dropdownViews[this.id] = this;\n}\n\nObject.assign(Dropdown, {\n  // Class methods\n  // -------------\n\n  createElement: function(options) {\n    var parent = options.appendTo,\n        el = document.createElement('ul');\n\n    if (el.classList) {\n      el.classList.add('dropdown-menu', 'textcomplete-dropdown');\n    } else {\n      el.className += ' dropdown-menu textcomplete-dropdown';\n    }\n\n    el.setAttribute('id', 'textcomplete-dropdown-' + options._oid);\n\n    el.style.display = 'none';\n    el.style.position = 'absolute';\n    el.style.left = 0 + 'px';\n    el.style.zIndex = options.zIndex;\n\n    parent.appendChild(el);\n    return el;\n  }\n});\n\nObject.assign(Dropdown.prototype, {\n  // Public properties\n  // -----------------\n\n  el:        null,  // ul.dropdown-menu element.\n  inputEl:   null,  // target textarea.\n  completer: null,\n  footer:    null,\n  header:    null,\n  id:        null,\n  maxCount:  10,\n  placement: '',\n  shown:     false,\n  data:      [],     // Shown zipped data.\n  className: '',\n\n  _elListeners: [],\n  _inputElListeners: [],\n\n  // Public methods\n  // --------------\n  on: function(el, type, func) {\n    var listeners = el === this.el ? this._elListeners : this._inputElListeners;\n    el.addEventListener(type, func);\n    listeners.push({ type: type, func: func });\n  },\n\n  destroy: function() {\n    // Don't remove el because it may be shared by several textcompletes.\n    this.deactivate();\n\n    this._elListeners.forEach(function(l) {\n      this.el.removeEventListener(l.type, l.func);\n    }, this);\n\n    this._inputElListeners.forEach(function(l) {\n      this.inputEl.removeEventListener(l.type, l.func);\n    }, this);\n\n    this.clear();\n\n    this.el.parentNode.removeChild(this.el);\n    this.el = this.inputEl = this.completer = null;\n    delete dropdownViews[this.id];\n  },\n\n  render: function(zippedData) {\n\n    var contentsHtml = this._buildContents(zippedData);\n    var unzippedData = this.data.filter(function(d) {\n      return d.value;\n    });\n\n    if (this.data.length) {\n      var strategy = zippedData[0].strategy;\n      if (strategy.id) {\n        this.el.setAttribute('data-strategy', strategy.id);\n      } else {\n        this.el.removeAttribute('data-strategy');\n      }\n      this._renderHeader(unzippedData);\n      this._renderFooter(unzippedData);\n\n      if (contentsHtml) {\n        this._renderContents(contentsHtml);\n        this._fitToBottom();\n        this._activateIndexedItem();\n      }\n      this._setScroll();\n    } else if (this.noResultsMessage) {\n      this._renderNoResultsMessage(unzippedData);\n    } else if (this.shown) {\n      this.deactivate();\n    }\n  },\n\n  setPosition: function(pos) {\n    // Make the dropdown fixed if the input is also fixed\n    // This can't be done during init, as textcomplete may be used on multiple elements on the same page\n    // Because the same dropdown is reused behind the scenes, we need to recheck every time the dropdown is showed\n    var position = 'absolute',\n        set = [],\n        setElem = this.inputEl;\n\n    // TODO: move out to util once appropriate name is found\n    while (setElem) {\n      set.unshift(setElem);\n      setElem = setElem.parentNode;\n    }\n\n    set.some(function(setItem) {\n      if (setItem.style && setItem.style.position === 'absolute') {\n        return true;\n      }\n      if (setItem.style && setItem.style.position === 'fixed') {\n        pos.top -= window.scrollTop;\n        pos.left -= window.scrollLeft;\n        position = 'absolute';\n        return true;\n      }\n    });\n\n    this.el.style.position = position;\n    // the left property in this operation causes lag + freeze\n    Object.assign(this.el.style, this._applyPlacement(pos));\n\n    return this;\n  },\n\n  clear: function() {\n    this.el.innerHTML = '';\n    this.data = [];\n    this._index = 0;\n    this._$header = this._$footer = this._$noResultsMessage = null;\n  },\n\n  activate: function() {\n    if (!this.shown) {\n      this.clear();\n      this.el.style.display = 'block';\n      if (this.className) {\n        if (this.el.classList) {\n          this.el.classList.add(this.className);\n        } else {\n          this.el.className += ' ' + this.className;\n        }\n      }\n\n      this.completer.fire('textComplete:show');\n      this.shown = true;\n    }\n    return this;\n  },\n\n  deactivate: function() {\n    if (this.shown) {\n      this.el.style.display = 'none';\n      if (this.className) this.el.classList.remove(this.className);\n      this.completer.fire('textComplete:hide');\n      this.shown = false;\n    }\n    return this;\n  },\n\n  isUp: function(e) {\n    return e.keyCode === 38 || (e.ctrlKey && e.keyCode === 80);  // UP, Ctrl-P\n  },\n\n  isDown: function(e) {\n    return e.keyCode === 40 || (e.ctrlKey && e.keyCode === 78);  // DOWN, Ctrl-N\n  },\n\n  isEnter: function(e) {\n    var modifiers = e.ctrlKey || e.altKey || e.metaKey || e.shiftKey;\n    return !modifiers && (e.keyCode === 13 || e.keyCode === 9 || (this.options.completeOnSpace === true && e.keyCode === 32))  // ENTER, TAB\n  },\n\n  isPageup: function(e) {\n    return e.keyCode === 33;  // PAGEUP\n  },\n\n  isPagedown: function(e) {\n    return e.keyCode === 34;  // PAGEDOWN\n  },\n\n  isEscape: function(e) {\n    return e.keyCode === 27;  // ESCAPE\n  },\n\n  // Private properties\n  // ------------------\n\n  _data:    null,  // Currently shown zipped data.\n  _index:   null,\n  _$header: null,\n  _$noResultsMessage: null,\n  _$footer: null,\n\n  // Private methods\n  // ---------------\n  _bindEvents: function() {\n    // packs functionality for both mobile and web\n    this.el.addEventListener('mousedown', function(e) {\n      if (e.target && e.target.parentNode && e.target.parentNode.classList.contains('textcomplete-item')) {\n        this._onClick(e);\n      }\n    }.bind(this), false);\n\n    this.el.addEventListener('touchstart', function(e) {\n      if (e.target && e.target.parentNode && e.target.parentNode.classList.contains('textcomplete-item')) {\n        this._onClick(e);\n      }\n    }.bind(this), false);\n\n    this.el.addEventListener('mouseover', function(e) {\n      if (e.target && e.target.classList.contains('textcomplete-item')) {\n        this._onMouseover(e);\n      }\n    }.bind(this), false);\n\n    this.inputEl.addEventListener('keydown', function (e) {\n      this._onKeydown(e);\n    }.bind(this), false);\n  },\n\n  _onClick: function(e) {\n    e.preventDefault();\n\n    var el = e.target;\n\n    if (!el.classList.contains('textcomplete-item')) {\n      el = util.closest(el, function(el) {\n        return el.classList.contains('textcomplete-item');\n      });\n    }\n\n    var datum = this.data[parseInt(el.getAttribute('data-index'), 10)];\n    this.completer.select(datum.value, datum.strategy, e);\n    var self = this;\n\n    /*\n      Deactive at next tick to allow other event handlers to know whether\n      the dropdown has been shown or not.\n    */\n    setTimeout(function() {\n      self.deactivate();\n      if (e.type === 'touchstart') {\n        self.inputEl.focus();\n      }\n    }, 0);\n  },\n\n  // Activate hovered item.\n  _onMouseover: function(e) {\n    e.preventDefault();\n    var el = e.target;\n\n    if (!el.classList.contains('textcomplete-item')) {\n      el = util.closest(el, 'textcomplete-item');\n    }\n\n    this._index = parseInt(el.getAttribute('data-index'), 10);\n    this._activateIndexedItem();\n  },\n\n  _onKeydown: function(e) {\n    if (!this.shown) { return; }\n\n    var command;\n\n    if (typeof this.options.onKeydown === 'function') {\n      command = this.options.onKeydown(e, COMMANDS);\n    }\n\n    if (command == null) {\n      command = this._defaultKeydown(e);\n    }\n\n    switch (command) {\n      case COMMANDS.KEY_UP:\n        e.preventDefault();\n        this._up();\n        break;\n      case COMMANDS.KEY_DOWN:\n        e.preventDefault();\n        this._down();\n        break;\n      case COMMANDS.KEY_ENTER:\n        e.preventDefault();\n        this._enter(e);\n        break;\n      case COMMANDS.KEY_PAGEUP:\n        e.preventDefault();\n        this._pageup();\n        break;\n      case COMMANDS.KEY_PAGEDOWN:\n        e.preventDefault();\n        this._pagedown();\n        break;\n      case COMMANDS.KEY_ESCAPE:\n        e.preventDefault();\n        this.deactivate();\n        break;\n    }\n  },\n\n  _defaultKeydown: function(e) {\n    if (this.isUp(e)) {\n      return COMMANDS.KEY_UP;\n    } else if (this.isDown(e)) {\n      return COMMANDS.KEY_DOWN;\n    } else if (this.isEnter(e)) {\n      return COMMANDS.KEY_ENTER;\n    } else if (this.isPageup(e)) {\n      return COMMANDS.KEY_PAGEUP;\n    } else if (this.isPagedown(e)) {\n      return COMMANDS.KEY_PAGEDOWN;\n    } else if (this.isEscape(e)) {\n      return COMMANDS.KEY_ESCAPE;\n    }\n  },\n\n  _up: function() {\n    if (this._index === 0) {\n      this._index = this.data.length - 1;\n    } else {\n      this._index -= 1;\n    }\n    this._activateIndexedItem();\n    this._setScroll();\n  },\n\n  _down: function() {\n    if (this._index === this.data.length - 1) {\n      this._index = 0;\n    } else {\n      this._index += 1;\n    }\n    this._activateIndexedItem();\n    this._setScroll();\n  },\n\n  _enter: function(e) {\n    var datum = this.data[parseInt(this._getActiveElement().getAttribute('data-index'), 10)];\n    this.completer.select(datum.value, datum.strategy, e);\n    this.deactivate();\n  },\n\n  _pageup: function() {\n\n    // suspect: means of calculating threshold\n    var target = 0;\n    var threshold = this._getActiveElement().offsetTop - this.el.innerHeight;\n\n    // suspect: values returned by offsetTop, outerHeight compared to computed styles\n    this.el.children.forEach(function(i) {\n      if (i.offsetTop + i.outerHeight > threshold) {\n        target = i;\n        return false;\n      }\n    });\n\n    this._index = target;\n    this._activateIndexedItem();\n    this._setScroll();\n  },\n\n  _pagedown: function() {\n\n    var target = this.data.length - 1;\n    var threshold = this._getActiveElement().offsetTop + this.el.innerHeight;\n\n    this.el.children.forEach(function(i) {\n      if (i.offsetTop > threshold) {\n        target = i;\n        return false;\n      }\n    });\n\n    this._index = target;\n    this._activateIndexedItem();\n    this._setScroll();\n  },\n\n  _activateIndexedItem: function() {\n    if (this.el.querySelectorAll('.textcomplete-item.active')) {\n      for (var i = 0; i < this.el.querySelectorAll('.textcomplete-item.active').length; i++) {\n        if (this.el.querySelectorAll('.textcomplete-item.active')[i].classList) {\n          this.el.querySelectorAll('.textcomplete-item.active')[i].classList.remove('active');\n        } else {\n          this.el.querySelectorAll('.textcomplete-item.active')[i].className = this.el.querySelectorAll('.textcomplete-item.active')[i].className.replace(new RegExp('(^|\\\\b)' + 'active'.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n        }\n      }\n    }\n\n    if (this._getActiveElement()) {\n      if (this._getActiveElement().classList) {\n        this._getActiveElement().classList.add('active');\n      } else {\n        this._getActiveElement().className += ' active';\n      }\n    }\n  },\n\n  _getActiveElement: function() {\n    return this.el.querySelectorAll('.textcomplete-item')[this._index];\n  },\n\n  _setScroll: function() {\n    var activeEl = this._getActiveElement();\n    var itemTop = activeEl.offsetTop;\n    var itemHeight = activeEl.outerHeight;\n    var visibleHeight = this.el.innerHeight;\n    var visibleTop = this.el.scrollTop;\n    if (this._index === 0 || this._index == this.data.length - 1 || itemTop < 0) {\n      this.el.scrollTop = itemTop + visibleTop;\n    } else if (itemTop + itemHeight > visibleHeight) {\n      this.el.scrollTop = itemTop + itemHeight + visibleTop - visibleHeight;\n    }\n  },\n\n  _buildContents: function(zippedData) {\n    var datum, i, index;\n    var html = '';\n\n    for (i = 0; i < zippedData.length; i++) {\n      if (this.data.length === this.maxCount) break;\n      datum = zippedData[i];\n      if (util.include(this.data, datum)) { continue; }\n      index = this.data.length;\n      this.data.push(datum);\n      html += '<li class=textcomplete-item data-index=' + index + '><a>';\n      html +=   datum.strategy.template(datum.value, datum.term);\n      html += '</a></li>';\n    }\n\n    return html;\n  },\n\n  _renderHeader: function(unzippedData) {\n    if (this.header) {\n      if (!this._$header) {\n\n        // suspect: translation loss form jq to native js\n        var headerEl = document.createElement('li');\n        headerEl.classList.add('textcomplete-header');\n        this._$header = this.el.insertBefore(headerEl, this.el.firstChild);\n      }\n      var html = (typeof this.header === 'function') ? this.header(unzippedData) : this.header;\n      this._$header.innerHTML = html;\n    }\n  },\n\n  _renderFooter: function(unzippedData) {\n    if (this.footer) {\n      if (!this._$footer) {\n\n        // suspect: translation loss form jq to native js\n        this._$footer = this.el.innerHTML += '<li class=\"textcomplete-footer\"></li>';\n\n      }\n      var html = (typeof this.footer === 'function') ? this.footer(unzippedData) : this.footer;\n      this._$footer.innerHTML = html;\n    }\n  },\n\n  _renderNoResultsMessage: function(unzippedData) {\n    if (this.noResultsMessage) {\n      if (!this._$noResultsMessage) {\n        this._$noResultsMessage = this.el.innerHTML += '<li class=\"textcomplete-no-results-message\"></li>';\n      }\n      var html = (typeof this.noResultsMessage === 'function') ? this.noResultsMessage(unzippedData) : this.noResultsMessage;\n      this._$noResultsMessage.html(html);\n    }\n  },\n\n  _renderContents: function(html) {\n    if (this._$footer) {\n      this._$footer.insertAdjacentHTML('beforebegin', html);\n    } else {\n      this.el.innerHTML += html;\n    }\n  },\n\n  // TODO: translate to pure js w/o causing lag/freeze\n  _fitToBottom: function() {\n    var windowScrollBottom = window.scrollTop + window.height;\n    var height = this.el.style.height;\n\n    if ((this.el.offsetTop + height) > windowScrollBottom) {\n      this.el.top = windowScrollBottom - height;\n    }\n  },\n\n  // TODO: translate to pure js w/o causing lag/freeze\n  _fitToRight: function() {\n    // We don't know how wide our content is until the browser positions us, and at that point it clips us\n    // to the document width so we don't know if we would have overrun it. As a heuristic to avoid that clipping\n    // (which makes our elements wrap onto the next line and corrupt the next item), if we're close to the right\n    // edge, move left. We don't know how far to move left, so just keep nudging a bit.\n\n    var tolerance = 30;\n    var left = this.el.getBoundingClientRect().left + document.body.scrollLeft,\n        width = this.el.style.width;\n    while (left + width > tolerance) {\n      this.el.left = (this.el.getBoundingClientRect().left + document.body.scrollLeft) - tolerance;\n    }\n  },\n\n  // need to attach units to numerical values\n  _applyPlacement: function(position) {\n    var appliedPosition = {};\n\n    // If the 'placement' option set to 'top', move the position above the element.\n    if (this.placement === 'top') {\n      // Overwrite the position object to set the 'bottom' property instead of the top.\n      // position = {\n      //   top: 'auto',\n      //   bottom: this.el.parentNode.style.height - position.top + position.lineHeight + 'px',\n      //   left: position.left + 'px'\n      // }\n\n      appliedPosition = {\n        top: 'auto',\n        bottom: this.el.parentNode.style.height - position.top + position.lineHeight + 'px',\n        left: position.left + 'px',\n        lineHeight: position.lineHeight\n      }\n    } else {\n      appliedPosition = {\n        top: position.top + (position.lineHeight/2) + 'px',\n        bottom: 'auto',\n        left: position.left + 'px'\n      }\n    }\n\n    /* Needs review */\n    if (this.placement === 'absleft') {\n      position.left = 0;\n\n      console.log('[y:if] position: ', position);\n    } else if (this.placement === 'absright') {\n      position.right = 0;\n      position.left = 'auto';\n\n      console.log('[y:else] position: ', position);\n    }\n\n    return appliedPosition;\n  }\n});\n\nmodule.exports = Dropdown;\n",
    "/* jshint node: true */\n\n'use strict';\n\nvar memoize = require('./util').memorize;\n\nfunction Strategy(def, el) {\n  Object.assign(this, def);\n  this.el = el;\n  if (this.cache) this.search = memoize(this.search);\n}\n\nStrategy.parse = function(strategies, el) {\n  return strategies.map(function(strategy) {\n    return new Strategy(strategy, el);\n  });\n};\n\nObject.assign(Strategy.prototype, {\n  // Public properties\n  // -----------------\n\n  // Required\n  match:      null,\n  replace:    null,\n  search:     null,\n\n  // Optional\n  id:         null,\n  cache:      false,\n  context:    function() { return true; },\n  index:      2,\n  template:   function(obj) { return obj; },\n  idProperty: null\n});\n\nmodule.exports = Strategy;\n",
    "/* jshint node: true */\n\n'use strict';\n\nvar util = require('../util');\n\nfunction Adapter () {}\n\nObject.assign(Adapter.prototype, {\n  // Public properties\n  // -----------------\n\n  id:        null, // Identity.\n  completer: null, // Completer object which creates it.\n  el:        null, // Textarea element.\n  option:    null,\n\n  _listeners: [],  // Registered event listeners.\n\n  // Public methods\n  // --------------\n\n  initialize: function(element, completer, options) {\n    this.el        = element;\n    this.id        = completer.id + this.constructor.name;\n    this.completer = completer;\n    this.options    = options;\n\n    if (this.options.debounce) {\n      this._onKeyup = util.debounce(this._onKeyup, this.options.debounce);\n    }\n\n    this._bindEvents();\n  },\n\n  on: function(type, func) {\n    this.el.addEventListener(type, func);\n    this._listeners.push({ type: type, func: func });\n  },\n\n  destroy: function() {\n    this._listeners.forEach(function(l) {\n      this.el.removeEventListener(l.type, l.func);\n    }, this);\n\n    this.$el = this.el = this.completer = null;\n  },\n\n  /**\n   * Update the element with the given value and strategy.\n   *\n   * @param {Object} value The selected object. It is one of the item of the\n   * array which was callbacked from the search function.\n   * @param {Strategy} strategy The Strategy associated with the selected value.\n   * @return {void}\n   */\n  select: function(/* value, strategy */) {\n    throw new Error('Not implemented');\n  },\n\n  /**\n   * Returns the caret's relative coordinates from body's top-left corner.\n   * @return {number} The caret's relative coordinates from body's top-left corner.\n   */\n  getCaretPosition: function() {\n    var position = this._getCaretRelativePosition(),\n        offset = util.offset(this.el),\n        parent = this.options.appendTo,\n        parentOffset;\n\n    // Calculate the left top corner of `this.options.appendTo` element.\n    if (parent) {\n       parentOffset = util.offset(parent.offsetParent || parent);\n       offset.top  -= parentOffset.top;\n       offset.left -= parentOffset.left;\n    }\n\n    position.top  += offset.top;\n    position.left += offset.left;\n    return position;\n  },\n\n  // Focus on the element.\n  focus: function() {\n    this.el.focus();\n  },\n\n  // Private methods\n  // ---------------\n\n  _bindEvents: function() {\n    this.on('keyup', this._onKeyup.bind(this));\n  },\n\n  _onKeyup: function(e) {\n    if (this._skipSearch(e)) return;\n    this.completer.trigger(this.getTextFromHeadToCaret(), true);\n  },\n\n  // Suppress searching if it returns true.\n  _skipSearch: function(clickEvent) {\n    switch (clickEvent.keyCode) {\n      case 9:  // TAB\n      case 13: // ENTER\n      case 40: // DOWN\n      case 38: // UP\n        return true;\n    }\n    if (clickEvent.ctrlKey)\n      switch (clickEvent.keyCode) {\n        case 78: // Ctrl-N\n        case 80: // Ctrl-P\n          return true;\n      }\n  }\n});\n\nmodule.exports = Adapter;\n",
    "/* jshint node: true */\n\n// NOTE: TextComplete plugin has contenteditable support but it does not work\n//       fine especially on old IEs.\n//       Any pull requests are REALLY welcome.\n\n'use strict';\n\nvar Adapter = require('./Adapter'),\n    util = require('../util');\n\n// ContentEditable adapter\n// =======================\n//\n// Adapter for contenteditable elements.\nfunction ContentEditable(element, completer, options) {\n  this.initialize(element, completer, options);\n}\n\nObject.assign(ContentEditable.prototype, Adapter.prototype, {\n  // Public methods\n  // --------------\n  select: function(value, strategy, e) {\n    var pre = this.getTextFromHeadToCaret(),\n        sel = window.getSelection(),\n        range = sel.getRangeAt(0),\n        selection = range.cloneRange();\n\n    selection.selectNodeContents(range.startContainer);\n\n    var content = selection.toString(),\n        post = content.substring(range.startOffset), // empty\n        newSubstr = strategy.replace(value, e);\n\n    var preWrapper,\n        postWrapper,\n        fragment,\n        lastOfPre;\n\n    if (typeof newSubstr !== 'undefined') {\n      console.log('newSubstr: ', newSubstr);\n\n      if (util.isArray(newSubstr)) {\n        post += newSubstr[1];\n        newSubstr = newSubstr[0];\n      }\n\n      pre = pre.replace(strategy.match, newSubstr);\n      range.selectNodeContents(range.startContainer);\n      range.deleteContents();\n\n      // create temporary elements\n      preWrapper  = document.createElement('div');\n      postWrapper = document.createElement('div');\n      preWrapper.innerHTML = pre;\n      postWrapper.innerHTML = post;\n\n      // create the fragment thats inserted\n      fragment = document.createDocumentFragment();\n      lastOfPre = fragment.appendChild(preWrapper.firstChild);\n\n      // insert the fragment & jump behind the last node in \"pre\"\n      range.insertNode(fragment);\n      range.setStartAfter(lastOfPre);\n\n      range.collapse(true);\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n  },\n\n  // Private methods\n  // ---------------\n\n  /**\n   * Returns the caret's relative position from the contenteditable's top-left\n   * corner. For example,\n   *\n   *    this._getCaretRelativePosition()\n   *    //=> { top: 18, left: 200, lineHeight: 16 }\n   *\n   * @return {Object} Position object.\n   */\n  _getCaretRelativePosition: function() {\n    var range  = window.getSelection().getRangeAt(0).cloneRange(),\n        node   = document.createElement('span'),\n        offset = util.offset(this.el);\n\n    range.insertNode(node);\n    range.selectNodeContents(node);\n    range.deleteContents();\n\n    var position = util.offset(node),\n        height = node.getBoundingClientRect().height;\n\n    position.left -= offset.left;\n    position.top  += height - offset.top;\n    position.lineHeight = height;\n    node.parentNode.removeChild(node);\n\n    return position;\n  },\n\n  /**\n   * Returns the string between the first character and the caret.\n   * Completer will be triggered with the result for start autocompleting.\n   * For example, suppose the html is '<b>hello</b> wor|ld' and | is the caret.\n   *\n   *    this.getTextFromHeadToCaret()\n   *    //=> ' wor'  // not '<b>hello</b> wor'\n   *\n   * @return {string} The string between the first character and caret.\n   */\n  getTextFromHeadToCaret: function() {\n    var range = window.getSelection().getRangeAt(0),\n        selection = range.cloneRange();\n\n    selection.selectNodeContents(range.startContainer);\n\n    return selection.toString().substring(0, range.startOffset);\n  }\n});\n\nmodule.exports = ContentEditable;\n",
    "/* jshint node: true */\n\n'use strict';\n\nvar Textarea = require('./Textarea'),\n    util = require('../util'),\n    sentinelChar = '吶';\n\nfunction IETextarea(element, completer, options) {\n  this.initialize(element, completer, options);\n\n  var span = document.createElement('span');\n  span.innerHTML = sentinelChar;\n  element.parentNode.insertBefore(span, element);\n}\n\nObject.assign(IETextarea.prototype, Textarea.prototype, {\n  // Public methods\n  // --------------\n\n  select: function(value, strategy, e) {\n    var el = el,\n        pre  = this.getTextFromHeadToCaret(),\n        post = el.value.substring(pre.length),\n        newSubstr = strategy.replace(value, e),\n        range;\n\n    if (typeof newSubstr !== 'undefined') {\n      if (util.isArray(newSubstr)) {\n        post = newSubstr[1] + post;\n        newSubstr = newSubstr[0];\n      }\n\n      pre = pre.replace(strategy.match, newSubstr);\n      el.value = pre + post;\n      el.focus();\n\n      range = el.createTextRange();\n      range.collapse(true);\n      range.moveEnd('character', pre.length);\n      range.moveStart('character', pre.length);\n      range.select();\n    }\n  },\n\n  getTextFromHeadToCaret: function() {\n    this.el.focus();\n    var range = document.selection.createRange();\n    range.moveStart('character', -this.el.value.length);\n    var arr = range.text.split(sentinelChar)\n    return arr.length === 1 ? arr[0] : arr[1];\n  }\n});\n\nmodule.exports = IETextarea;\n",
    "/* jshint node: true */\n\n'use strict';\n\nvar getCaretCoordinates = require('../../lib/textarea_caret'),\n    Adapter = require('./Adapter'),\n    util = require('../util');\n\n// Textarea adapter\n// ================\n//\n// Managing a textarea. It doesn't know a Dropdown.\nfunction Textarea(element, completer, options) {\n  this.initialize(element, completer, options);\n}\n\nObject.assign(Textarea.prototype, Adapter.prototype, {\n  // Public methods\n  // --------------\n\n  // Update the textarea with the given value and strategy.\n  select: function(value, strategy, e) {\n    var el   = this.el,\n        pre  = this.getTextFromHeadToCaret(),\n        post = el.value.substring(el.selectionEnd),\n        newSubstr = strategy.replace(value, e);\n\n    if (typeof newSubstr !== 'undefined') {\n      if (util.isArray(newSubstr)) {\n        post = newSubstr[1] + post;\n        newSubstr = newSubstr[0];\n      }\n\n      pre = pre.replace(strategy.match, newSubstr);\n      el.value = pre + post;\n      el.selectionStart = el.selectionEnd = pre.length;\n    }\n  },\n\n  getTextFromHeadToCaret: function() {\n    return this.el.value.substring(0, this.el.selectionEnd);\n  },\n\n  // Private methods\n  // ---------------\n  _getCaretRelativePosition: function() {\n    var p = getCaretCoordinates(this.el, this.el.selectionStart);\n    return {\n      top:  p.top + this._calculateLineHeight() - this.el.scrollTop,\n      left: p.left - this.el.scrollLeft\n    };\n  },\n\n  // http://stackoverflow.com/a/4515470/1297336\n  _calculateLineHeight: function() {\n    var parentNode = this.el.parentNode,\n        temp  = document.createElement(this.el.nodeName),\n        style = this.el.style,\n        lineHeight;\n\n    temp.setAttribute('style',\n      'margin:0px;padding:0px;font-family:' + style.fontFamily + ';font-size:' + style.fontSize\n    );\n\n    temp.innerHTML = 'test';\n    parentNode.appendChild(temp);\n    lineHeight = temp.clientHeight;\n    parentNode.removeChild(temp);\n\n    return lineHeight;\n  }\n});\n\nmodule.exports = Textarea;\n",
    "/* jshint node: true */\nmodule.exports = {\n  ContentEditable: require('./ContentEditable'),\n  Textarea: require('./Textarea'),\n  IETextarea: require('./IETextarea')\n};\n",
    "/* jshint node: true */\n\nmodule.exports = {\n  SKIP_DEFAULT: 0,\n  KEY_UP: 1,\n  KEY_DOWN: 2,\n  KEY_ENTER: 3,\n  KEY_PAGEUP: 4,\n  KEY_PAGEDOWN: 5,\n  KEY_ESCAPE: 6\n};\n",
    "/* jshint node: true */\n\n/*!\n * jQuery.textcomplete\n *\n * Repository: https://github.com/yuku-t/jquery-textcomplete\n * License:    MIT (https://github.com/yuku-t/jquery-textcomplete/blob/master/LICENSE)\n * Author:     Yuku Takahashi\n */\n\n'use strict';\n\nvar Completer = require('./Completer'),\n    Strategy  = require('./Strategy'),\n    util = require('./util'),\n    id = 0,\n    registry = {};\n\nvar COMMANDS = require('./commands');\n\n/**\n * Initialize the TextComplete interaction.\n * @param  {DomElement[]} elems An array of DOM element nodes\n * (e.g., selected with document.querySelectorAll).\n * @param  {Strategy} strategies TextComplete Strategy definition\n * @param  {Object} options Customize TextComplete interaction.\n * @return {void}\n */\nfunction TextComplete(elems, strategies, options) {\n  // add conditions + errors\n  elems.forEach(function(el) {\n    var data = el.dataset,\n        completer = registry[data.textComplete];\n\n    if (!completer) {\n      options = options || {};\n      options._oid = ++id;  // unique object id\n      completer = registry[id] = new Completer(el, options);\n    }\n\n    if (util.isString(strategies)) {\n      if (!completer) return;\n\n      completer[strategies].call(completer, options);\n\n      if (strategies === 'destroy') {\n        delete data.textComplete;\n      }\n    } else {\n      completer.register(Strategy.parse(strategies, el));\n    }\n  });\n}\n\n// s\nObject.assign(TextComplete.prototype, COMMANDS);\n\nmodule.exports = TextComplete;\n",
    "/* jshint node: true */\n\n'use strict';\n\nvar toString = Object.prototype.toString;\n\n/**\n * Tests if the passed argument is a string.\n * @param  {Object}  obj A JavaScript object.\n * @return {Boolean} Returns true if the given argument is a string.\n */\nfunction isString(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n}\n\n/**\n * Tests if the passed argument is a function.\n * @param  {Object}  obj A JavaScript object.\n * @return {Boolean} Returns true if the given argument is a function.\n */\nfunction isFunction(obj) {\n  return toString.call(obj) === '[object Function]';\n}\n\n/**\n * Tests if the passed argument is a number.\n * @param  {Object}  obj A JavaScript object.\n * @return {Boolean} Returns true if the given argument is a number.\n */\nfunction isNumber(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n}\n\n/**\n * Tests if the passed argument is a array.\n * @param  {Object}  obj A JavaScript object.\n * @return {Boolean} Returns true if the given argument is a array.\n */\nfunction isArray(obj) {\n  return toString.call(obj) === '[object Array]';\n}\n\n/**\n * Prints a warning message to the JavaScript console.\n * @param  {string} message The message to log.\n * @return {void}\n */\nfunction warn(message) {\n  if (console.warn) { console.warn(message); }\n}\n\n/**\n * Memoize a search function.\n * @param  {Function} func A search function to memoize.\n * @return {Function} The memoized search function.\n */\nfunction memoize(func) {\n  var memo = {};\n  return function(term, callback) {\n    if (memo[term]) {\n      callback(memo[term]);\n    } else {\n      func.call(this, term, function(data) {\n        memo[term] = (memo[term] || []).concat(data);\n        callback.apply(null, arguments);\n      });\n    }\n  };\n}\n\n/**\n * Exclusive execution control utility. Once the given function is called,\n * additional executions are ignored until it is \"freed\" by invoking the passed\n * first argument. When this occurs, the most recent ignored execution is\n * immediately replayed. For example,\n *\n *  var lockedFunc = lock(function(free) {\n *    setTimeout(function { free(); }, 1000); // It will be free in 1 sec.\n *    console.log('Hello, world');\n *  });\n *  lockedFunc();  // => 'Hello, world'\n *  lockedFunc();  // none\n *  lockedFunc();  // none\n *  // 1 sec past then\n *  // => 'Hello, world'\n *  lockedFunc();  // => 'Hello, world'\n *  lockedFunc();  // none\n *\n * @param  {Function} func The function to be locked.\n * @return {Function} The wrapped function, with `free` as the first argument.\n */\nfunction lock(func) {\n  var locked, queuedArgsToReplay;\n\n  return function() {\n    // Convert arguments into a real array.\n    var args = Array.prototype.slice.call(arguments);\n    if (locked) {\n      // Keep a copy of this argument list to replay later.\n      // OK to overwrite a previous value because we only replay\n      // the last one.\n      queuedArgsToReplay = args;\n      return;\n    }\n    locked = true;\n    var self = this;\n    args.unshift(function replayOrFree() {\n      if (queuedArgsToReplay) {\n        // Other request(s) arrived while we were locked.\n        // Now that the lock is becoming available, replay\n        // the latest such request, then call back here to\n        // unlock (or replay another request that arrived\n        // while this one was in flight).\n        var replayArgs = queuedArgsToReplay;\n        queuedArgsToReplay = undefined;\n        replayArgs.unshift(replayOrFree);\n        func.apply(self, replayArgs);\n      } else {\n        locked = false;\n      }\n    });\n    func.apply(this, args);\n  };\n}\n\n/**\n * Attaches the given handler to the element. The handler is unbound after it\n * is invoked the first time.\n * @param  {DomElement} el\n * @param  {Function} func\n * @return {DomElement}\n */\nfunction one(el, type, func) {\n  var wrap = function() {\n    func();\n    el.removeEventListener(type, wrap);\n  };\n\n  el.addEventListener(type, wrap);\n}\n\n// semantically checks out\nfunction triggerNative(el, type) {\n  var event = document.createEvent('HTMLEvents');\n  event.initEvent(type, true, false);\n\n  el.dispatchEvent(event);\n}\n\n// not sure about this\nfunction triggerCustom(el, type, data) {\n  var event;\n\n  if (window.CustomEvent) {\n    event = new CustomEvent(type, { detail: data });\n  } else {\n    event = document.createEvent('CustomEvent');\n    event.initCustomEvent(type, true, true, data);\n    console.log(event);\n  }\n\n  el.dispatchEvent(event);\n}\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n`* wait` msec. This utility function was originally implemented at Underscore.js.\n *\n * @param  {Function} func Function to debounce\n * @param  {number} wait Time between invocations, in milliseconds.\n * @return {Function} Debounced function.\n */\nfunction debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function() {\n    var last = Date.now() - timestamp;\n    if (last < wait) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      context = args = null;\n    }\n  };\n\n  return function() {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\nfunction offset(el) {\n  var rect = el.getBoundingClientRect();\n  return {\n    top: rect.top + document.body.scrollTop,\n    left: rect.left + document.body.scrollLeft\n  };\n}\n\nfunction include(zippedData, datum) {\n  var idProperty = datum.strategy.idProperty,\n      i, elem;\n\n  for (i = 0; i < zippedData.length; i++) {\n    elem = zippedData[i];\n    if (elem.strategy !== datum.strategy) continue;\n    if (idProperty) {\n      if (elem.value[idProperty] === datum.value[idProperty]) return true;\n    } else {\n      if (elem.value === datum.value) return true;\n    }\n  }\n\n  return false;\n}\n\n/* native js implementation of jQuery's .closest() */\nfunction closest(el, f) {\n  return el && (f(el) ? el : closest(el.parentNode, f));\n}\n\n// Polyfill Object.assign\nif (typeof Object.assign != 'function') {\n  (function() {\n    Object.assign = function(target) {\n      /* jshint node: true */\n      // suspect: v\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var output = Object(target);\n      for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index];\n        if (source !== undefined && source !== null) {\n          for (var nextKey in source) {\n            if (source.hasOwnProperty(nextKey)) {\n              output[nextKey] = source[nextKey];\n            }\n          }\n        }\n      }\n      return output;\n    };\n  })();\n}\n\nmodule.exports = {\n  debounce: debounce,\n  include: include,\n  isString: isString,\n  isFunction: isFunction,\n  isNumber: isNumber,\n  isArray: Array.isArray || isArray,\n  lock: lock,\n  memoize: memoize,\n  offset: offset,\n  one: one,\n  triggerNative: triggerNative,\n  triggerCustom: triggerCustom,\n  warn: warn,\n  closest: closest\n};\n"
  ]
}